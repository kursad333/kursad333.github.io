{"version":3,"file":"EventDB-ba80c814.js","sources":["../../src/db/EventDB.ts"],"sourcesContent":["import {DokkieEvent} from \"../types\";\nimport {api} from \"@hboictcloud/api\";\nimport \"../../wwwroot/assets/legacy/hboictcloud-config\";\n\n// Creates new event in database\nexport async function dbEventCreate(event: DokkieEvent): Promise<string | Array<any>> {\n    const query: string = \"INSERT INTO `event` (description) VALUES (?);\"\n    try {\n        const data: string | Array<any> = await api.queryDatabase(\n            query,\n            event.description\n        )\n        return data\n    } catch (reason: string) {\n        console.log(reason)\n        return reason\n    }\n}\n\n// Retrieves all events for user requesting it\nexport async function dbGetEvents(user: { userId: number }): Promise<string | Array<DokkieEvent>> {\n    const query: string = \"SELECT e.*, (SELECT COUNT(p.userId) FROM participant p WHERE p.eventId = e.eventId) as participantCount FROM event e WHERE e.eventId IN (SELECT eventId FROM participant WHERE userId = ?)\"\n    try {\n        const data: string | Array<DokkieEvent> = await api.queryDatabase(\n            query,\n            user.userId\n        )\n        return data\n    } catch (reason: string) {\n        console.log(reason)\n        return reason\n    }\n}\n\n// Retrieves all information for requested event including participantcount\nexport async function dbGetEventDetails(eventId: number): Promise<string | DokkieEvent> {\n    const query: string = \"SELECT e.*, COUNT(p.eventId) AS participantCount FROM event e LEFT JOIN participant p ON e.eventId = p.eventId WHERE e.eventId = ? GROUP BY e.eventId;\"\n    try {\n        const data: string | Array<DokkieEvent> = await api.queryDatabase(\n            query,\n            eventId\n        )\n        return data[0]\n    } catch (reason: string) {\n        console.log(reason);\n        return reason\n    }\n}\n"],"names":["dbEventCreate","event","query","api","reason","dbGetEvents","user","dbGetEventDetails","eventId"],"mappings":"8CAKA,eAAsBA,EAAcC,EAAkD,CAClF,MAAMC,EAAgB,gDAClB,GAAA,CAKO,OAJ2B,MAAMC,EAAI,cACxCD,EACAD,EAAM,WAAA,QAGLG,EAAgB,CACrB,eAAQ,IAAIA,CAAM,EACXA,CACX,CACJ,CAGA,eAAsBC,EAAYC,EAAgE,CAC9F,MAAMJ,EAAgB,6LAClB,GAAA,CAKO,OAJmC,MAAMC,EAAI,cAChDD,EACAI,EAAK,MAAA,QAGJF,EAAgB,CACrB,eAAQ,IAAIA,CAAM,EACXA,CACX,CACJ,CAGA,eAAsBG,EAAkBC,EAAgD,CACpF,MAAMN,EAAgB,yJAClB,GAAA,CAKA,OAJ0C,MAAMC,EAAI,cAChDD,EACAM,CAAA,GAEQ,CAAC,QACRJ,EAAgB,CACrB,eAAQ,IAAIA,CAAM,EACXA,CACX,CACJ"}